<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="#e!a[r[rImHcNzaf=.DS">roll</variable></variables><block type="pxt-on-start" id="xRRgvHNlG#rZ^u`HECiY" x="20" y="20"><statement name="HANDLER"><block type="device_print_message" id="Zol8@4|(`5vNcQI:zXWg"><value name="text"><shadow type="text" id="ibV{aJOj~#y/`8^G5{Zd"><field name="TEXT">Shake to roll</field></shadow></value></block></statement></block><block type="device_gesture_event" id="w4{V?d7H!g{oMRvq%=RY" x="424" y="20"><field name="NAME">Gesture.Shake</field><comment pinned="false" h="80" w="160">Great job. You moved the commands inside of the onShake event trigger. This way, the code will get executed when the micro:bit is shaken.&#10;here is a comment.</comment><statement name="HANDLER"><block type="variables_set" id="cH*lSbz+*W9XM;Q|A?/V"><field name="VAR" id="#e!a[r[rImHcNzaf=.DS">roll</field><comment pinned="false" h="80" w="160">A variable is a place where your program can store a value. We need a place to store the result of the roll, so I created a variable called roll.&#10;I have the program generate a random number between 1 and 6, and I assign that value to the roll variable</comment><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="device_random" id="tCJBFNY{LHDxhh@K`%3H"><value name="min"><shadow type="math_number" id="bAj(yshwS|v8rN%A!uO/"><field name="NUM">1</field></shadow></value><value name="limit"><shadow type="math_number" id="@@MscK$LFpJMQr0K%XO="><field name="NUM">6</field></shadow></value></block></value><next><block type="controls_if" id="EhdZ^;}u(G$!B[QRYtRo"><mutation elseif="4" else="1"/><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="79hKWNG[bqRIUN8j%t-H"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="Le.tG2:XpMau`=#7p6U?"><field name="VAR" id="#e!a[r[rImHcNzaf=.DS">roll</field></block></value><value name="B"><shadow type="math_number" id="vtG[c8L^+pKLkNqpi%Zc"><field name="NUM">1</field></shadow></value></block></value><statement name="DO0"><block type="device_show_leds" id="`=,}L,HwB{@4E~(C8mqA"><field name="LEDS">`&#10;        # . . . . &#10;        . # . . . &#10;        . . # . . &#10;        . . . # . &#10;        . . . . #&#10;        `</field></block></statement><value name="IF1"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="F!LrgIL92J+shq9=Lio0"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="[fs@_ZsPRM}kw=Wx/Vp2"><field name="VAR" id="#e!a[r[rImHcNzaf=.DS">roll</field></block></value><value name="B"><shadow type="math_number" id="L5J$MbaZH``1e:8vX.dF"><field name="NUM">2</field></shadow></value></block></value><statement name="DO1"><block type="device_show_leds" id="`oxJjBj3jp`pCB?Bq|Uw"><field name="LEDS">`&#10;        . . . . . &#10;        . . . . . &#10;        . # . # . &#10;        . . . . . &#10;        . . . . .&#10;        `</field></block></statement><value name="IF2"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="bJkD/9hS;5dS~@h0y}T="><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="e4)T*z^N*!IT}qHn]co;"><field name="VAR" id="#e!a[r[rImHcNzaf=.DS">roll</field></block></value><value name="B"><shadow type="math_number" id="6.];(!v9P{kr`uB=!$Yc"><field name="NUM">3</field></shadow></value></block></value><statement name="DO2"><block type="device_show_leds" id="uZE$#p7@(G4@-U1IK0Mo"><field name="LEDS">`&#10;        . . # . . &#10;        . . . . . &#10;        . . # . . &#10;        . . . . . &#10;        . . # . .&#10;        `</field></block></statement><value name="IF3"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="gX%g#*?4~=$j;7/fHffW"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="Gsx*FkTAU:$(cflF8u;v"><field name="VAR" id="#e!a[r[rImHcNzaf=.DS">roll</field></block></value><value name="B"><shadow type="math_number" id="iW=|PEHJmZ.u/{Z]M0]e"><field name="NUM">4</field></shadow></value></block></value><statement name="DO3"><block type="device_show_leds" id="4Ugq?$=7.IYHa^u461$j"><field name="LEDS">`&#10;        # . . . # &#10;        . . . . . &#10;        . . . . . &#10;        . . . . . &#10;        # . . . #&#10;        `</field></block></statement><value name="IF4"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="-y8_7vW|T;LH6zsW_acY"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="XV}Dcx91;|FC2_dI6YqQ"><field name="VAR" id="#e!a[r[rImHcNzaf=.DS">roll</field></block></value><value name="B"><shadow type="math_number" id="Sd1ub|x@kH!GL)xK-KNe"><field name="NUM">5</field></shadow></value></block></value><statement name="DO4"><block type="device_show_leds" id="ufM?A`4G/n?65JJ/}8f)"><field name="LEDS">`&#10;        # . . . # &#10;        . . . . . &#10;        . . # . . &#10;        . . . . . &#10;        # . . . #&#10;        `</field></block></statement><statement name="ELSE"><block type="device_show_leds" id="K3n)YSYk9d:/CZ;meZc@"><field name="LEDS">`&#10;        # . . . # &#10;        . . . . . &#10;        # . . . # &#10;        . . . . . &#10;        # . . . #&#10;        `</field></block></statement></block></next></block></statement></block></xml>