<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="{#ns!PXqU6x)e%w?++xs">roll</variable></variables><block type="device_gesture_event" id="qubz:O8gZ!+kNU-#[/R9" x="270" y="-234"><field name="NAME">Gesture.Shake</field><comment pinned="true" h="161" w="316">Great job. You moved the commands inside of the onShake event trigger. This way, the code will get executed when the micro:bit is shaken.</comment><statement name="HANDLER"><block type="variables_set" id="VLkU-%zF_~^$Cc{(U}qD"><field name="VAR" id="{#ns!PXqU6x)e%w?++xs">roll</field><comment pinned="false" h="147" w="281">A variable is a place where your program can store a value. We need a place to store the result of the roll, so I created a variable called roll.</comment><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="device_random" id="!2N3J4OKr*#RVhIOP#oT"><comment pinned="false" h="149" w="277"> I have the program generate a random number between 1 and 6, and I assign that value to the roll variable</comment><value name="min"><shadow type="math_number" id="OkBZ{@$n1|k?W?$u7pG!"><field name="NUM">1</field></shadow></value><value name="limit"><shadow type="math_number" id="l~WbV:(..KNR[!v28|mo"><field name="NUM">6</field></shadow></value></block></value><next><block type="controls_if" id="O=]g4g!*;JM:0_;aZ9fw"><mutation elseif="4" else="1"/><value name="IF0"><shadow type="logic_boolean" id="e3JnwOS35)O9mM;1+NO@"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="noPdWgFKvRIb]])oCw83"><field name="OP">EQ</field><value name="A"><shadow type="math_number" id="F$[jW,M#y29vwNoRmWPk"><field name="NUM">0</field></shadow><block type="variables_get" id="w3PR^~%~/7{=WDE%Qo=_"><field name="VAR" id="{#ns!PXqU6x)e%w?++xs">roll</field></block></value><value name="B"><shadow type="math_number" id="s{M_ZB~Hy!%awh]N2hMZ"><field name="NUM">1</field></shadow></value></block></value><statement name="DO0"><block type="device_show_leds" id=",xd-{`!ISfZN~tKIREOa"><field name="LEDS">`&#10;        . . . . . &#10;        . . . . . &#10;        . . # . . &#10;        . . . . . &#10;        . . . . .&#10;        `</field></block></statement><value name="IF1"><block type="logic_compare" id="[aB@~ybzd:qbkr~K(Rp`"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="dxNT!)$TdJ_B:1]|_B0u"><field name="VAR" id="{#ns!PXqU6x)e%w?++xs">roll</field></block></value><value name="B"><shadow type="math_number" id="k~UiC#k$E@AAo;d3/C5b"><field name="NUM">2</field></shadow></value></block></value><statement name="DO1"><block type="device_show_leds" id="E`yU9U!wqP_{;OW(;!0T"><field name="LEDS">`&#10;        . . . . . &#10;        . . . . . &#10;        . # . # . &#10;        . . . . . &#10;        . . . . .&#10;        `</field></block></statement><value name="IF2"><block type="logic_compare" id="v-ar)[`5wI(;BRtLtEyQ"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="T#fY*[Ef^Wzz[53c%XW0"><field name="VAR" id="{#ns!PXqU6x)e%w?++xs">roll</field></block></value><value name="B"><shadow type="math_number" id="i0@)#[YvvbGdF($gd2L;"><field name="NUM">3</field></shadow></value></block></value><statement name="DO2"><block type="device_show_leds" id="4?Cj#:3o+A`dO^CMY4JF"><field name="LEDS">`&#10;        . . # . . &#10;        . . . . . &#10;        . . # . . &#10;        . . . . . &#10;        . . # . .&#10;        `</field></block></statement><value name="IF3"><block type="logic_compare" id="|tvfq0:HO)dBuuv:fxJQ"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="A.$78`F3x?d9#aJ*wWFK"><field name="VAR" id="{#ns!PXqU6x)e%w?++xs">roll</field></block></value><value name="B"><shadow type="math_number" id="$c?JT/ua_2AWp@:~pK7-"><field name="NUM">4</field></shadow></value></block></value><statement name="DO3"><block type="device_show_leds" id="e+0;Mq9yJ4g@y^Bc2f%U"><field name="LEDS">`&#10;        # . . . # &#10;        . . . . . &#10;        . . . . . &#10;        . . . . . &#10;        # . . . #&#10;        `</field></block></statement><value name="IF4"><block type="logic_compare" id="tN~u[VBe]4^m|o[d[DE;"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="QKmsOBgZou8{u9c|?B.^"><field name="VAR" id="{#ns!PXqU6x)e%w?++xs">roll</field></block></value><value name="B"><shadow type="math_number" id="**jT0n;3v{H^Lm7m!}A2"><field name="NUM">5</field></shadow></value></block></value><statement name="DO4"><block type="device_show_leds" id="!E]X4)_,]Q!:UmIHrn4n"><field name="LEDS">`&#10;        # . . . # &#10;        . . . . . &#10;        . . # . . &#10;        . . . . . &#10;        # . . . #&#10;        `</field></block></statement><statement name="ELSE"><block type="device_show_leds" id="~N0t9cyrc)B[I!6O?C+b"><field name="LEDS">`&#10;        # . . . # &#10;        . . . . . &#10;        # . . . # &#10;        . . . . . &#10;        # . . . #&#10;        `</field></block></statement></block></next></block></statement></block><block type="pxt-on-start" id="BOX$QNdL)Pfz}oLh{/Bp" x="-237" y="-174"><comment pinned="false" h="93" w="287">Code added here will run once when the program starts</comment><statement name="HANDLER"><block type="device_print_message" id="LWZ2x?%3+;:[*%@sWB-V"><value name="text"><shadow type="text" id="fi+odEoitEJbqH(hMSLn"><field name="TEXT">Shake to roll</field></shadow></value></block></statement></block></xml>