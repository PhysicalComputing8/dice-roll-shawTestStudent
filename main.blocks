<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="zI$_Whwyzi~~xnng%/`/">roll</variable></variables><block type="device_gesture_event" id="S8R+/LFx:3oGFps/WYjA" x="413" y="0"><field name="NAME">Gesture.Shake</field><comment pinned="false" h="80" w="160">Great job. You moved the commands inside of the onShake event trigger. This way, the code will get executed when the micro:bit is shaken.</comment><statement name="HANDLER"><block type="variables_set" id="TJAyklX+#)R`wC:@bfe]"><field name="VAR" id="zI$_Whwyzi~~xnng%/`/">roll</field><comment pinned="false" h="80" w="160">A variable is a place where your program can store a value. We need a place to store the result of the roll, so I created a variable called roll.&#10;I have the program generate a random number between 1 and 6, and I assign that value to the roll variable</comment><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="device_random" id="ysxZk?rf,O;TlB3r*Y9("><value name="min"><shadow type="math_number" id="JguZDzQhv:#nXqIz*$R`"><field name="NUM">1</field></shadow></value><value name="limit"><shadow type="math_number" id="y^.Q_/{B(Fs$Y5Ze(U$Y"><field name="NUM">6</field></shadow></value></block></value><next><block type="controls_if" id="NeOk7_j.B^/q;_T^~j]U"><mutation elseif="4" else="1"/><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="hwsKtE-axu#terW.I+@X"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="c@sZ=(@QCtw_M.$zTbw]"><field name="VAR" id="zI$_Whwyzi~~xnng%/`/">roll</field></block></value><value name="B"><shadow type="math_number" id="L3oVfi$:|zX]0.^TQ;47"><field name="NUM">1</field></shadow></value></block></value><statement name="DO0"><block type="device_show_leds" id="_`[N`8ao{vGnl:(cMI23"><field name="LEDS">`&#10;        # . # . # &#10;        . # # # . &#10;        # # # # # &#10;        . # # # . &#10;        # . # . #&#10;        `</field></block></statement><value name="IF1"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="G/pi4ZT{#?L,=-8t4mWT"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="yN)cxX**]22{|5XnVV%L"><field name="VAR" id="zI$_Whwyzi~~xnng%/`/">roll</field></block></value><value name="B"><shadow type="math_number" id="^j4nNb!tiuYcHU3ORC=J"><field name="NUM">2</field></shadow></value></block></value><statement name="DO1"><block type="device_show_leds" id="Ei:]f`QG$@y=*$k`~u+@"><field name="LEDS">`&#10;        . . . . . &#10;        . . . . . &#10;        . # . # . &#10;        . . . . . &#10;        . . . . .&#10;        `</field></block></statement><value name="IF2"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="xAvjY5G^F9a9)D4Hrodx"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="`/xvuYd9b-]/:]d#QDEa"><field name="VAR" id="zI$_Whwyzi~~xnng%/`/">roll</field></block></value><value name="B"><shadow type="math_number" id="H=Uz(IB$.=td8vsPLB{7"><field name="NUM">3</field></shadow></value></block></value><statement name="DO2"><block type="device_show_leds" id=":$ibm/*C]o.lg=r0RX0o"><field name="LEDS">`&#10;        . . # . . &#10;        . . . . . &#10;        . . # . . &#10;        . . . . . &#10;        . . # . .&#10;        `</field></block></statement><value name="IF3"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="]jmdvk:]x5%p#LMN*@=,"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="``Wk)99s2qg)z`kE~~$@"><field name="VAR" id="zI$_Whwyzi~~xnng%/`/">roll</field></block></value><value name="B"><shadow type="math_number" id="NT;#/y4tQ/#R*3yd0`~$"><field name="NUM">4</field></shadow></value></block></value><statement name="DO3"><block type="device_show_leds" id="6cD}UJN3jy;W*7}SwWf~"><field name="LEDS">`&#10;        # . . . # &#10;        . . . . . &#10;        . . . . . &#10;        . . . . . &#10;        # . . . #&#10;        `</field></block></statement><value name="IF4"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="fK=`J/vU/4D-hHPKznr="><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="D2@SX?jnRHuP@A2KccNc"><field name="VAR" id="zI$_Whwyzi~~xnng%/`/">roll</field></block></value><value name="B"><shadow type="math_number" id="F2N~Q_E0}`!f+wkVjm*$"><field name="NUM">5</field></shadow></value></block></value><statement name="DO4"><block type="device_show_leds" id="rfVP/aI{zrtM01#Oocr*"><field name="LEDS">`&#10;        # . . . # &#10;        . . . . . &#10;        . . # . . &#10;        . . . . . &#10;        # . . . #&#10;        `</field></block></statement><statement name="ELSE"><block type="device_show_leds" id="/$P7yUJTbE]~O(Aa[Ufq"><field name="LEDS">`&#10;        # . . . # &#10;        . . . . . &#10;        # . . . # &#10;        . . . . . &#10;        # . . . #&#10;        `</field></block></statement></block></next></block></statement></block><block type="pxt-on-start" id="xRRgvHNlG#rZ^u`HECiY" x="0" y="120"><statement name="HANDLER"><block type="device_print_message" id="3nZ3=At.|vyRNBV7G?SZ"><value name="text"><shadow type="text" id="^$/gMx7[.8i%Y7oHV|,u"><field name="TEXT">Shake to roll</field></shadow></value></block></statement></block></xml>